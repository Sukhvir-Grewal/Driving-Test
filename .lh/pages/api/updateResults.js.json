{
    "sourceFile": "pages/api/updateResults.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 50,
            "patches": [
                {
                    "date": 1706371097540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706371718683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n connectDB();\r\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const { newName } = req.body;\r\n+        const { isPass } = req.body;\r\n         const { old } = req.body;\r\n         try {\r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: old },\r\n"
                },
                {
                    "date": 1706371749943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import User from \"./User\";\r\n+import connectDB from \"./mongo\";\r\n+\r\n+connectDB();\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { isPass } = req.body;\r\n+        const { isPass } = req.body;\r\n+        try {\r\n+            const updatedUser = await User.findOneAndUpdate(\r\n+                { username: old },\r\n+                { $set: { username: newName } },\r\n+                { new: true } // to get the updated document\r\n+            );\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Update successful\",\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Updating\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706371758251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import User from \"./User\";\r\n+import connectDB from \"./mongo\";\r\n+\r\n+connectDB();\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { isPass } = req.body;\r\n+        const { username } = req.body;\r\n+        try {\r\n+            const updatedUser = await User.findOneAndUpdate(\r\n+                { username: username },\r\n+                { $set: { username: newName } },\r\n+                { new: true } // to get the updated document\r\n+            );\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Update successful\",\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Updating\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706371765539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import User from \"./User\";\r\n+import connectDB from \"./mongo\";\r\n+\r\n+connectDB();\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { isPass } = req.body;\r\n+        const { username } = req.body;\r\n+        try {\r\n+            const updatedUser = await User.findOneAndUpdate(\r\n+                { username: username },\r\n+                { $set: {  } },\r\n+                { new: true } // to get the updated document\r\n+            );\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Update successful\",\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Updating\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706371772667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import User from \"./User\";\r\n+import connectDB from \"./mongo\";\r\n+\r\n+connectDB();\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { isPass } = req.body;\r\n+        const { username } = req.body;\r\n+        try {\r\n+            const updatedUser = await User.findOneAndUpdate(\r\n+                { username: username },\r\n+                { $set: {  } },\r\n+                { new: true } \r\n+            );\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Update successful\",\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Updating\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706372227679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+import User from \"./User\";\r\n+import connectDB from \"./mongo\";\r\n+\r\n+connectDB();\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { isPass, username } = req.body;\r\n+        try {\r\n+            let updatedUser;\r\n+            const user = await User.findOne({ username });\r\n+\r\n+            if (!user) {\r\n+                return res.status(404).json({ message: \"User not found\" });\r\n+            }\r\n+\r\n+            // Check if totalQuizTaken field exists\r\n+            if (!user.totalQuizTaken) {\r\n+                // If not, set it to 1\r\n+                updatedUser = await User.findOneAndUpdate(\r\n+                    { username },\r\n+                    { $set: { totalQuizTaken: 1 } },\r\n+                    { new: true }\r\n+                );\r\n+            } else {\r\n+                // If exists, increment it by one\r\n+                updatedUser = await User.findOneAndUpdate(\r\n+                    { username },\r\n+                    { $inc: { totalQuizTaken: 1 } },\r\n+                    { new: true }\r\n+                );\r\n+            }\r\n+\r\n+            // Check if isPass is true and totalQuizPassed field exists\r\n+            if (isPass) {\r\n+                // If isPass is true, increment totalQuizPassed by one\r\n+                updatedUser = await User.findOneAndUpdate(\r\n+                    { username },\r\n+                    { $inc: { totalQuizPassed: 1 } },\r\n+                    { new: true }\r\n+                );\r\n+            } else {\r\n+                // If isPass is false, increment totalQuizFailed by one\r\n+                updatedUser = await User.findOneAndUpdate(\r\n+                    { username },\r\n+                    { $inc: { totalQuizFailed: 1 } },\r\n+                    { new: true }\r\n+                );\r\n+            }\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Update successful\",\r\n+                user: updatedUser,\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Updating\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706372335473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import User from \"./User\";\r\n import connectDB from \"./mongo\";\r\n \r\n connectDB();\r\n \r\n@@ -61,149 +60,4 @@\n     } else {\r\n         res.status(405).json({ message: \"Method Not Allowed\" });\r\n     }\r\n }\r\n-import User from \"./User\";\r\n-import connectDB from \"./mongo\";\r\n-\r\n-connectDB();\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { isPass } = req.body;\r\n-        const { username } = req.body;\r\n-        try {\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n-                { username: username },\r\n-                { $set: {  } },\r\n-                { new: true } \r\n-            );\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Update successful\",\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Updating\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import User from \"./User\";\r\n-import connectDB from \"./mongo\";\r\n-\r\n-connectDB();\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { isPass } = req.body;\r\n-        const { username } = req.body;\r\n-        try {\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n-                { username: username },\r\n-                { $set: {  } },\r\n-                { new: true } // to get the updated document\r\n-            );\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Update successful\",\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Updating\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import User from \"./User\";\r\n-import connectDB from \"./mongo\";\r\n-\r\n-connectDB();\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { isPass } = req.body;\r\n-        const { username } = req.body;\r\n-        try {\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n-                { username: username },\r\n-                { $set: { username: newName } },\r\n-                { new: true } // to get the updated document\r\n-            );\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Update successful\",\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Updating\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import User from \"./User\";\r\n-import connectDB from \"./mongo\";\r\n-\r\n-connectDB();\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { isPass } = req.body;\r\n-        const { isPass } = req.body;\r\n-        try {\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n-                { username: old },\r\n-                { $set: { username: newName } },\r\n-                { new: true } // to get the updated document\r\n-            );\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Update successful\",\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Updating\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import User from \"./User\";\r\n-import connectDB from \"./mongo\";\r\n-\r\n-connectDB();\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { isPass } = req.body;\r\n-        const { old } = req.body;\r\n-        try {\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n-                { username: old },\r\n-                { $set: { username: newName } },\r\n-                { new: true } // to get the updated document\r\n-            );\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Update successful\",\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Updating\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1706372348823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n+import User from \"./auth/User\";\r\n import connectDB from \"./mongo\";\r\n \r\n-connectDB();\r\n+;\r\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n"
                },
                {
                    "date": 1706372357199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import User from \"./auth/User\";\r\n-import connectDB from \"./mongo\";\r\n+import connectDB from \"./auth/mongo\";\r\n \r\n-;\r\n+connectDB();\r\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n"
                },
                {
                    "date": 1706372596570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,16 +17,16 @@\n             // Check if totalQuizTaken field exists\r\n             if (!user.totalQuizTaken) {\r\n                 // If not, set it to 1\r\n                 updatedUser = await User.findOneAndUpdate(\r\n-                    { username },\r\n+                    { username: usern },\r\n                     { $set: { totalQuizTaken: 1 } },\r\n                     { new: true }\r\n                 );\r\n             } else {\r\n                 // If exists, increment it by one\r\n                 updatedUser = await User.findOneAndUpdate(\r\n-                    { username },\r\n+                    { username: usern },\r\n                     { $inc: { totalQuizTaken: 1 } },\r\n                     { new: true }\r\n                 );\r\n             }\r\n@@ -34,16 +34,16 @@\n             // Check if isPass is true and totalQuizPassed field exists\r\n             if (isPass) {\r\n                 // If isPass is true, increment totalQuizPassed by one\r\n                 updatedUser = await User.findOneAndUpdate(\r\n-                    { username },\r\n+                    { username: usern },\r\n                     { $inc: { totalQuizPassed: 1 } },\r\n                     { new: true }\r\n                 );\r\n             } else {\r\n                 // If isPass is false, increment totalQuizFailed by one\r\n                 updatedUser = await User.findOneAndUpdate(\r\n-                    { username },\r\n+                    { username: usern },\r\n                     { $inc: { totalQuizFailed: 1 } },\r\n                     { new: true }\r\n                 );\r\n             }\r\n"
                },
                {
                    "date": 1706372777404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,34 +17,34 @@\n             // Check if totalQuizTaken field exists\r\n             if (!user.totalQuizTaken) {\r\n                 // If not, set it to 1\r\n                 updatedUser = await User.findOneAndUpdate(\r\n-                    { username: usern },\r\n-                    { $set: { totalQuizTaken: 1 } },\r\n+                    { username: username },\r\n+                    { $set: { totalQuizTaken: 100 } },\r\n                     { new: true }\r\n                 );\r\n             } else {\r\n                 // If exists, increment it by one\r\n                 updatedUser = await User.findOneAndUpdate(\r\n-                    { username: usern },\r\n-                    { $inc: { totalQuizTaken: 1 } },\r\n+                    { username: username },\r\n+                    { $inc: { totalQuizTaken: 100 } },\r\n                     { new: true }\r\n                 );\r\n             }\r\n \r\n             // Check if isPass is true and totalQuizPassed field exists\r\n             if (isPass) {\r\n                 // If isPass is true, increment totalQuizPassed by one\r\n                 updatedUser = await User.findOneAndUpdate(\r\n-                    { username: usern },\r\n-                    { $inc: { totalQuizPassed: 1 } },\r\n+                    { username: username },\r\n+                    { $inc: { totalQuizPassed: 100 } },\r\n                     { new: true }\r\n                 );\r\n             } else {\r\n                 // If isPass is false, increment totalQuizFailed by one\r\n                 updatedUser = await User.findOneAndUpdate(\r\n-                    { username: usern },\r\n-                    { $inc: { totalQuizFailed: 1 } },\r\n+                    { username: username },\r\n+                    { $inc: { totalQuizFailed: 100 } },\r\n                     { new: true }\r\n                 );\r\n             }\r\n \r\n"
                },
                {
                    "date": 1706372805852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,16 +18,16 @@\n             if (!user.totalQuizTaken) {\r\n                 // If not, set it to 1\r\n                 updatedUser = await User.findOneAndUpdate(\r\n                     { username: username },\r\n-                    { $set: { totalQuizTaken: 100 } },\r\n+                    { $set: { totalQuizTaken: 1 } },\r\n                     { new: true }\r\n                 );\r\n             } else {\r\n                 // If exists, increment it by one\r\n                 updatedUser = await User.findOneAndUpdate(\r\n                     { username: username },\r\n-                    { $inc: { totalQuizTaken: 100 } },\r\n+                    { $inc: { totalQuizTaken: 1 } },\r\n                     { new: true }\r\n                 );\r\n             }\r\n \r\n@@ -35,16 +35,16 @@\n             if (isPass) {\r\n                 // If isPass is true, increment totalQuizPassed by one\r\n                 updatedUser = await User.findOneAndUpdate(\r\n                     { username: username },\r\n-                    { $inc: { totalQuizPassed: 100 } },\r\n+                    { $inc: { totalQuizPassed: 1 } },\r\n                     { new: true }\r\n                 );\r\n             } else {\r\n                 // If isPass is false, increment totalQuizFailed by one\r\n                 updatedUser = await User.findOneAndUpdate(\r\n                     { username: username },\r\n-                    { $inc: { totalQuizFailed: 100 } },\r\n+                    { $inc: { totalQuizFailed: 1 } },\r\n                     { new: true }\r\n                 );\r\n             }\r\n \r\n"
                },
                {
                    "date": 1706372873792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,49 +6,32 @@\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n         try {\r\n-            let updatedUser;\r\n-            const user = await User.findOne({ username });\r\n+            let updateQuery = {};\r\n \r\n-            if (!user) {\r\n-                return res.status(404).json({ message: \"User not found\" });\r\n-            }\r\n-\r\n             // Check if totalQuizTaken field exists\r\n-            if (!user.totalQuizTaken) {\r\n-                // If not, set it to 1\r\n-                updatedUser = await User.findOneAndUpdate(\r\n-                    { username: username },\r\n-                    { $set: { totalQuizTaken: 1 } },\r\n-                    { new: true }\r\n-                );\r\n-            } else {\r\n-                // If exists, increment it by one\r\n-                updatedUser = await User.findOneAndUpdate(\r\n-                    { username: username },\r\n-                    { $inc: { totalQuizTaken: 1 } },\r\n-                    { new: true }\r\n-                );\r\n+            if (!isPass) {\r\n+                updateQuery.$inc = { totalQuizTaken: 1 };\r\n             }\r\n \r\n             // Check if isPass is true and totalQuizPassed field exists\r\n             if (isPass) {\r\n-                // If isPass is true, increment totalQuizPassed by one\r\n-                updatedUser = await User.findOneAndUpdate(\r\n-                    { username: username },\r\n-                    { $inc: { totalQuizPassed: 1 } },\r\n-                    { new: true }\r\n-                );\r\n+                updateQuery.$inc = { totalQuizPassed: 1 };\r\n             } else {\r\n-                // If isPass is false, increment totalQuizFailed by one\r\n-                updatedUser = await User.findOneAndUpdate(\r\n-                    { username: username },\r\n-                    { $inc: { totalQuizFailed: 1 } },\r\n-                    { new: true }\r\n-                );\r\n+                updateQuery.$inc = { totalQuizFailed: 1 };\r\n             }\r\n \r\n+            const updatedUser = await User.findOneAndUpdate(\r\n+                { username: username },\r\n+                updateQuery,\r\n+                { new: true }\r\n+            );\r\n+\r\n+            if (!updatedUser) {\r\n+                return res.status(404).json({ message: \"User not found\" });\r\n+            }\r\n+\r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n                 user: updatedUser,\r\n             });\r\n"
                },
                {
                    "date": 1706373092045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n+        console.log(\"user da name\")\r\n         try {\r\n             let updateQuery = {};\r\n \r\n             // Check if totalQuizTaken field exists\r\n"
                },
                {
                    "date": 1706373097465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n-        console.log(\"user da name\")\r\n+        console.log(\"user da name\", username)\r\n         try {\r\n             let updateQuery = {};\r\n \r\n             // Check if totalQuizTaken field exists\r\n"
                },
                {
                    "date": 1706373103488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n         console.log(\"user da name\", username)\r\n+        console.log(\"is pass\", username)\r\n         try {\r\n             let updateQuery = {};\r\n \r\n             // Check if totalQuizTaken field exists\r\n"
                },
                {
                    "date": 1706373153647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n-        console.log(\"user da name\", username)\r\n-        console.log(\"is pass\", username)\r\n+        console.log(\"user da name\", username);\r\n+        console.log(\"is pass\", isPass);\r\n         try {\r\n             let updateQuery = {};\r\n \r\n             // Check if totalQuizTaken field exists\r\n"
                },
                {
                    "date": 1706373172088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,21 +8,21 @@\n         const { isPass, username } = req.body;\r\n         console.log(\"user da name\", username);\r\n         console.log(\"is pass\", isPass);\r\n         try {\r\n-            let updateQuery = {};\r\n+            // let updateQuery = {};\r\n \r\n-            // Check if totalQuizTaken field exists\r\n-            if (!isPass) {\r\n-                updateQuery.$inc = { totalQuizTaken: 1 };\r\n-            }\r\n+            // // Check if totalQuizTaken field exists\r\n+            // if (!isPass) {\r\n+            //     updateQuery.$inc = { totalQuizTaken: 1 };\r\n+            // }\r\n \r\n-            // Check if isPass is true and totalQuizPassed field exists\r\n-            if (isPass) {\r\n-                updateQuery.$inc = { totalQuizPassed: 1 };\r\n-            } else {\r\n-                updateQuery.$inc = { totalQuizFailed: 1 };\r\n-            }\r\n+            // // Check if isPass is true and totalQuizPassed field exists\r\n+            // if (isPass) {\r\n+            //     updateQuery.$inc = { totalQuizPassed: 1 };\r\n+            // } else {\r\n+            //     updateQuery.$inc = { totalQuizFailed: 1 };\r\n+            // }\r\n \r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n                 updateQuery,\r\n"
                },
                {
                    "date": 1706373177888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             // }\r\n \r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                updateQuery,\r\n+                data: 123,\r\n                 { new: true }\r\n             );\r\n \r\n             if (!updatedUser) {\r\n"
                },
                {
                    "date": 1706373499518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             // }\r\n \r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                data: 123,\r\n+                {},\r\n                 { new: true }\r\n             );\r\n \r\n             if (!updatedUser) {\r\n"
                },
                {
                    "date": 1706373508474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             // }\r\n \r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                {},\r\n+                {$set: {date\" }},\r\n                 { new: true }\r\n             );\r\n \r\n             if (!updatedUser) {\r\n"
                },
                {
                    "date": 1706373513936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             // }\r\n \r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                {$set: {date\" }},\r\n+                { $set: { date: 123 } },\r\n                 { new: true }\r\n             );\r\n \r\n             if (!updatedUser) {\r\n"
                },
                {
                    "date": 1706373610931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             // }\r\n \r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                { $set: { date: 123 } },\r\n+                { $set: { date: Date.now() } },\r\n                 { new: true }\r\n             );\r\n \r\n             if (!updatedUser) {\r\n"
                },
                {
                    "date": 1706373635471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             // }\r\n \r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                { $set: { date: Date.now() } },\r\n+                { $set: { data: Date.now() } },\r\n                 { new: true }\r\n             );\r\n \r\n             if (!updatedUser) {\r\n"
                },
                {
                    "date": 1706373853287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,20 +10,8 @@\n         console.log(\"is pass\", isPass);\r\n         try {\r\n             // let updateQuery = {};\r\n \r\n-            // // Check if totalQuizTaken field exists\r\n-            // if (!isPass) {\r\n-            //     updateQuery.$inc = { totalQuizTaken: 1 };\r\n-            // }\r\n-\r\n-            // // Check if isPass is true and totalQuizPassed field exists\r\n-            // if (isPass) {\r\n-            //     updateQuery.$inc = { totalQuizPassed: 1 };\r\n-            // } else {\r\n-            //     updateQuery.$inc = { totalQuizFailed: 1 };\r\n-            // }\r\n-\r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n                 { $set: { data: Date.now() } },\r\n                 { new: true }\r\n"
                },
                {
                    "date": 1706373862508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+import User from \"./auth/User\";\r\n+import connectDB from \"./auth/mongo\";\r\n+\r\n+connectDB();\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { isPass, username } = req.body;\r\n+        console.log(\"user da name\", username);\r\n+        try {\r\n+\r\n+            const updatedUser = await User.findOneAndUpdate(\r\n+                { username: username },\r\n+                { $set: { data: Date.now() } },\r\n+                { new: true }\r\n+            );\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Update successful\",\r\n+                user: updatedUser,\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Updating\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706373867619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n         console.log(\"user da name\", username);\r\n         try {\r\n-\r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n                 { $set: { data: Date.now() } },\r\n                 { new: true }\r\n"
                },
                {
                    "date": 1706373878164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import User from \"./auth/User\";\r\n+import connectDB from \"./auth/mongo\";\r\n+\r\n+connectDB();\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { isPass, username } = req.body;\r\n+        console.log(\"user da name\", username);\r\n+        try {\r\n+            const updatedUser = await User.findOneAndUpdate(\r\n+                { username: username },\r\n+                { $set: { data: 123 } },\r\n+                { new: true }\r\n+            );\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Update successful\",\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Updating\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706373927028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import User from \"./auth/User\";\r\n+import connectDB from \"./auth/mongo\";\r\n+\r\n+connectDB();\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { isPass, username } = req.body;\r\n+        console.log(\"user da name\", username);\r\n+        try {\r\n+            const updatedUser = await User.findOneAndUpdate(\r\n+                { username: username },\r\n+                { $set: { data: 123 } },\r\n+                { new: true }3\r\n+            );\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Update successful\",\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Updating\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706375249856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n         try {\r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n                 { $set: { data: 123 } },\r\n-                { new: true }3\r\n+                { new: true }\r\n             );\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n"
                },
                {
                    "date": 1706375332376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n             );\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n+                updatedUser\r\n             });\r\n         } catch (error) {\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Updating\",\r\n@@ -26,100 +27,4 @@\n     } else {\r\n         res.status(405).json({ message: \"Method Not Allowed\" });\r\n     }\r\n }\r\n-import User from \"./auth/User\";\r\n-import connectDB from \"./auth/mongo\";\r\n-\r\n-connectDB();\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { isPass, username } = req.body;\r\n-        console.log(\"user da name\", username);\r\n-        try {\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n-                { username: username },\r\n-                { $set: { data: 123 } },\r\n-                { new: true }\r\n-            );\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Update successful\",\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Updating\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import User from \"./auth/User\";\r\n-import connectDB from \"./auth/mongo\";\r\n-\r\n-connectDB();\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { isPass, username } = req.body;\r\n-        console.log(\"user da name\", username);\r\n-        try {\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n-                { username: username },\r\n-                { $set: { data: Date.now() } },\r\n-                { new: true }\r\n-            );\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Update successful\",\r\n-                user: updatedUser,\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Updating\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import User from \"./auth/User\";\r\n-import connectDB from \"./auth/mongo\";\r\n-\r\n-connectDB();\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { isPass, username } = req.body;\r\n-        console.log(\"user da name\", username);\r\n-        console.log(\"is pass\", isPass);\r\n-        try {\r\n-            // let updateQuery = {};\r\n-\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n-                { username: username },\r\n-                { $set: { data: Date.now() } },\r\n-                { new: true }\r\n-            );\r\n-\r\n-            if (!updatedUser) {\r\n-                return res.status(404).json({ message: \"User not found\" });\r\n-            }\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Update successful\",\r\n-                user: updatedUser,\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Updating\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1706375339548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n             );\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n-                updatedUser\r\n+                updatedUser:    \r\n             });\r\n         } catch (error) {\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Updating\",\r\n"
                },
                {
                    "date": 1706375574679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,21 +5,35 @@\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n-        console.log(\"user da name\", username);\r\n+        console.log(\"Received PUT request with username:\", username);\r\n+\r\n         try {\r\n+            // Check if the user exists\r\n+            const existingUser = await User.findOne({ username });\r\n+\r\n+            if (!existingUser) {\r\n+                return res.status(404).json({\r\n+                    message: \"User not found\",\r\n+                });\r\n+            }\r\n+\r\n+            // Update the user data\r\n             const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n                 { $set: { data: 123 } },\r\n                 { new: true }\r\n             );\r\n \r\n+            console.log(\"Updated user:\", updatedUser);\r\n+\r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n-                updatedUser:    \r\n+                updatedUser: updatedUser,\r\n             });\r\n         } catch (error) {\r\n+            console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Updating\",\r\n                 error: error.message,\r\n             });\r\n"
                },
                {
                    "date": 1706375722950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,14 @@\n                 });\r\n             }\r\n \r\n             // Update the user data\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n-                { username: username },\r\n+            const updatedUser = await User.findByIdAndUpdate(\r\n+                userId,\r\n                 { $set: { data: 123 } },\r\n                 { new: true }\r\n             );\r\n-\r\n+            \r\n             console.log(\"Updated user:\", updatedUser);\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n"
                },
                {
                    "date": 1706375756962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,9 @@\n connectDB();\r\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const { isPass, username } = req.body;\r\n-        console.log(\"Received PUT request with username:\", username);\r\n+        const { isPass, userId } = req.body;\r\n \r\n         try {\r\n             // Check if the user exists\r\n             const existingUser = await User.findOne({ username });\r\n"
                },
                {
                    "date": 1706375781153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,35 +4,22 @@\n connectDB();\r\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const { isPass, userId } = req.body;\r\n-\r\n+        const { isPass, username } = req.body;\r\n+        console.log(\"user da name\", username);\r\n         try {\r\n-            // Check if the user exists\r\n-            const existingUser = await User.findOne({ username });\r\n-\r\n-            if (!existingUser) {\r\n-                return res.status(404).json({\r\n-                    message: \"User not found\",\r\n-                });\r\n-            }\r\n-\r\n-            // Update the user data\r\n-            const updatedUser = await User.findByIdAndUpdate(\r\n-                userId,\r\n+            const updatedUser = await User.findOneAndUpdate(\r\n+                { username: username },\r\n                 { $set: { data: 123 } },\r\n                 { new: true }\r\n             );\r\n-            \r\n-            console.log(\"Updated user:\", updatedUser);\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n                 updatedUser: updatedUser,\r\n             });\r\n         } catch (error) {\r\n-            console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Updating\",\r\n                 error: error.message,\r\n             });\r\n"
                },
                {
                    "date": 1706375789219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,21 +5,35 @@\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n-        console.log(\"user da name\", username);\r\n+        console.log(\"Received PUT request with username:\", username);\r\n+\r\n         try {\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n+            // Check if the user exists\r\n+            const existingUser = await User.findOne({ username });\r\n+\r\n+            if (!existingUser) {\r\n+                return res.status(404).json({\r\n+                    message: \"User not found\",\r\n+                });\r\n+            }\r\n+\r\n+            // Update the user data\r\n+            const result = await User.updateOne(\r\n                 { username: username },\r\n-                { $set: { data: 123 } },\r\n-                { new: true }\r\n+                { $set: { data: 123 } }\r\n             );\r\n+            \r\n \r\n+            console.log(\"Updated user:\", updatedUser);\r\n+\r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n                 updatedUser: updatedUser,\r\n             });\r\n         } catch (error) {\r\n+            console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Updating\",\r\n                 error: error.message,\r\n             });\r\n"
                },
                {
                    "date": 1706375794887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,19 +18,19 @@\n                 });\r\n             }\r\n \r\n             // Update the user data\r\n-            const result = await User.updateOne(\r\n+            const result = await Userres.updateOne(\r\n                 { username: username },\r\n                 { $set: { data: 123 } }\r\n             );\r\n             \r\n \r\n-            console.log(\"Updated user:\", updatedUser);\r\n+            console.log(\"Updated user:\", res);\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n-                updatedUser: updatedUser,\r\n+                updatedUser: res,\r\n             });\r\n         } catch (error) {\r\n             console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n"
                },
                {
                    "date": 1706375802844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,19 +18,19 @@\n                 });\r\n             }\r\n \r\n             // Update the user data\r\n-            const result = await Userres.updateOne(\r\n+            const result = await User.updateOne(\r\n                 { username: username },\r\n                 { $set: { data: 123 } }\r\n             );\r\n             \r\n \r\n-            console.log(\"Updated user:\", res);\r\n+            console.log(\"Updated user:\", re);\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n-                updatedUser: res,\r\n+                re: re,\r\n             });\r\n         } catch (error) {\r\n             console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n"
                },
                {
                    "date": 1706376088528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,19 +18,19 @@\n                 });\r\n             }\r\n \r\n             // Update the user data\r\n-            const result = await User.updateOne(\r\n+            const result = await User.findOneAndUpdate(\r\n                 { username: username },\r\n                 { $set: { data: 123 } }\r\n             );\r\n             \r\n \r\n-            console.log(\"Updated user:\", re);\r\n+            console.log(\"Updated user:\", result);\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n-                re: re,\r\n+                updatedUser: result,\r\n             });\r\n         } catch (error) {\r\n             console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n"
                },
                {
                    "date": 1706376209769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \r\n             // Update the user data\r\n             const result = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                { $set: { data: 123 } }\r\n+                { $set: { data: \"123\" } }\r\n             );\r\n             \r\n \r\n             console.log(\"Updated user:\", result);\r\n"
                },
                {
                    "date": 1706376635566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,35 +5,38 @@\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n-        console.log(\"Received PUT request with username:\", username);\r\n-\r\n         try {\r\n-            // Check if the user exists\r\n-            const existingUser = await User.findOne({ username });\r\n+            let updateQuery = {};\r\n \r\n-            if (!existingUser) {\r\n-                return res.status(404).json({\r\n-                    message: \"User not found\",\r\n-                });\r\n+            // Check if totalQuizTaken field exists\r\n+            if (!isPass) {\r\n+                updateQuery.$inc = { totalQuizTaken: 1 };\r\n             }\r\n \r\n-            // Update the user data\r\n-            const result = await User.findOneAndUpdate(\r\n+            // Check if isPass is true and totalQuizPassed field exists\r\n+            if (isPass) {\r\n+                updateQuery.$inc = { totalQuizPassed: 1 };\r\n+            } else {\r\n+                updateQuery.$inc = { totalQuizFailed: 1 };\r\n+            }\r\n+\r\n+            const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                { $set: { data: \"123\" } }\r\n+                updateQuery,\r\n+                { new: true }\r\n             );\r\n-            \r\n \r\n-            console.log(\"Updated user:\", result);\r\n+            if (!updatedUser) {\r\n+                return res.status(404).json({ message: \"User not found\" });\r\n+            }\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n-                updatedUser: result,\r\n+                user: updatedUser,\r\n             });\r\n         } catch (error) {\r\n-            console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Updating\",\r\n                 error: error.message,\r\n             });\r\n"
                },
                {
                    "date": 1706376728520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,38 +5,35 @@\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n+        console.log(\"Received PUT request with username:\", username);\r\n+\r\n         try {\r\n-            let updateQuery = {};\r\n+            // Check if the user exists\r\n+            const existingUser = await User.findOne({ username });\r\n \r\n-            // Check if totalQuizTaken field exists\r\n-            if (!isPass) {\r\n-                updateQuery.$inc = { totalQuizTaken: 1 };\r\n+            if (!existingUser) {\r\n+                return res.status(404).json({\r\n+                    message: \"User not found\",\r\n+                });\r\n             }\r\n \r\n-            // Check if isPass is true and totalQuizPassed field exists\r\n-            if (isPass) {\r\n-                updateQuery.$inc = { totalQuizPassed: 1 };\r\n-            } else {\r\n-                updateQuery.$inc = { totalQuizFailed: 1 };\r\n-            }\r\n-\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n+            // Update the user data\r\n+            const result = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                updateQuery,\r\n-                { new: true }\r\n+                { $set: { data: \"123\" } }\r\n             );\r\n+            \r\n \r\n-            if (!updatedUser) {\r\n-                return res.status(404).json({ message: \"User not found\" });\r\n-            }\r\n+            console.log(\"Updated user:\", result);\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n-                user: updatedUser,\r\n+                updatedUser: result,\r\n             });\r\n         } catch (error) {\r\n+            console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Updating\",\r\n                 error: error.message,\r\n             });\r\n"
                },
                {
                    "date": 1706376791650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,35 +5,38 @@\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n-        console.log(\"Received PUT request with username:\", username);\r\n-\r\n         try {\r\n-            // Check if the user exists\r\n-            const existingUser = await User.findOne({ username });\r\n+            let updateQuery = {};\r\n \r\n-            if (!existingUser) {\r\n-                return res.status(404).json({\r\n-                    message: \"User not found\",\r\n-                });\r\n+            // Check if totalQuizTaken field exists\r\n+            if (!isPass) {\r\n+                updateQuery.$inc = { totalQuizTaken: 1 };\r\n             }\r\n \r\n-            // Update the user data\r\n-            const result = await User.findOneAndUpdate(\r\n+            // Check if isPass is true and totalQuizPassed field exists\r\n+            if (isPass) {\r\n+                updateQuery.$inc = { totalQuizPassed: 1 };\r\n+            } else {\r\n+                updateQuery.$inc = { totalQuizFailed: 1 };\r\n+            }\r\n+\r\n+            const updatedUser = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                { $set: { data: \"123\" } }\r\n+                updateQuery,\r\n+                { new: true }\r\n             );\r\n-            \r\n \r\n-            console.log(\"Updated user:\", result);\r\n+            if (!updatedUser) {\r\n+                return res.status(404).json({ message: \"User not found\" });\r\n+            }\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n-                updatedUser: result,\r\n+                user: updatedUser,\r\n             });\r\n         } catch (error) {\r\n-            console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Updating\",\r\n                 error: error.message,\r\n             });\r\n"
                },
                {
                    "date": 1706376819163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,38 +5,35 @@\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n+        console.log(\"Received PUT request with username:\", username);\r\n+\r\n         try {\r\n-            let updateQuery = {};\r\n+            // Check if the user exists\r\n+            const existingUser = await User.findOne({ username });\r\n \r\n-            // Check if totalQuizTaken field exists\r\n-            if (!isPass) {\r\n-                updateQuery.$inc = { totalQuizTaken: 1 };\r\n+            if (!existingUser) {\r\n+                return res.status(404).json({\r\n+                    message: \"User not found\",\r\n+                });\r\n             }\r\n \r\n-            // Check if isPass is true and totalQuizPassed field exists\r\n-            if (isPass) {\r\n-                updateQuery.$inc = { totalQuizPassed: 1 };\r\n-            } else {\r\n-                updateQuery.$inc = { totalQuizFailed: 1 };\r\n-            }\r\n-\r\n-            const updatedUser = await User.findOneAndUpdate(\r\n+            // Update the user data\r\n+            const result = await User.findOneAndUpdate(\r\n                 { username: username },\r\n-                updateQuery,\r\n-                { new: true }\r\n+                { $set: { data: \"123\" } }\r\n             );\r\n+            \r\n \r\n-            if (!updatedUser) {\r\n-                return res.status(404).json({ message: \"User not found\" });\r\n-            }\r\n+            console.log(\"Updated user:\", result);\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n-                user: updatedUser,\r\n+                updatedUser: result,\r\n             });\r\n         } catch (error) {\r\n+            console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Updating\",\r\n                 error: error.message,\r\n             });\r\n"
                },
                {
                    "date": 1706376865283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,52 @@\n-import User from \"./auth/User\";\r\n-import connectDB from \"./auth/mongo\";\r\n+import User from \"./User\";\r\n+import connectDB from \"./mongo\";\r\n \r\n connectDB();\r\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n-        console.log(\"Received PUT request with username:\", username);\r\n-\r\n         try {\r\n-            // Check if the user exists\r\n-            const existingUser = await User.findOne({ username });\r\n+            let updatedUser;\r\n+            const user = await User.findOne({ username });\r\n \r\n-            if (!existingUser) {\r\n-                return res.status(404).json({\r\n-                    message: \"User not found\",\r\n-                });\r\n+            if (!user) {\r\n+                return res.status(404).json({ message: \"User not found\" });\r\n             }\r\n \r\n-            // Update the user data\r\n-            const result = await User.findOneAndUpdate(\r\n-                { username: username },\r\n-                { $set: { data: \"123\" } }\r\n-            );\r\n-            \r\n+            // Check if totalQuizTaken field exists\r\n+            if (!user.totalQuizTaken) {\r\n+                // If not, set it to 1\r\n+                updatedUser = await User.findOneAndUpdate(\r\n+                    { username },\r\n+                    { $set: { totalQuizTaken: 1 } },\r\n+                    { new: true }\r\n+                );\r\n+            } else {\r\n+                // If exists, increment it by one\r\n+                updatedUser = await User.findOneAndUpdate(\r\n+                    { username },\r\n+                    { $inc: { totalQuizTaken: 1 } },\r\n+                    { new: true }\r\n+                );\r\n+            }\r\n \r\n-            console.log(\"Updated user:\", result);\r\n+            // Check if isPass is true and totalQuizPassed field exists\r\n+            if (isPass && user.totalQuizPassed !== undefined) {\r\n+                // Increment totalQuizPassed by one and set totalQuizFailed to 0\r\n+                updatedUser = await User.findOneAndUpdate(\r\n+                    { username },\r\n+                    { $inc: { totalQuizPassed: 1 }, $set: { totalQuizFailed: 0 } },\r\n+                    { new: true }\r\n+                );\r\n+            }\r\n \r\n             res.status(200).json({\r\n                 message: \"Update successful\",\r\n-                updatedUser: result,\r\n+                user: updatedUser,\r\n             });\r\n         } catch (error) {\r\n-            console.error(\"Error during updating user:\", error);\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Updating\",\r\n                 error: error.message,\r\n             });\r\n"
                },
                {
                    "date": 1706376881460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n         try {\r\n             let updatedUser;\r\n-            const user = await User.findOne({ username });\r\n+            const user = await .findOne({ username });\r\n \r\n             if (!user) {\r\n                 return res.status(404).json({ message: \"User not found\" });\r\n             }\r\n"
                },
                {
                    "date": 1706376888679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import User from \"./User\";\r\n+import User from \"./auth/User\";\r\n import connectDB from \"./mongo\";\r\n \r\n connectDB();\r\n \r\n@@ -7,9 +7,9 @@\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n         try {\r\n             let updatedUser;\r\n-            const user = await .findOne({ username });\r\n+            const user = await User.findOne({ username });\r\n \r\n             if (!user) {\r\n                 return res.status(404).json({ message: \"User not found\" });\r\n             }\r\n"
                },
                {
                    "date": 1706376895223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import User from \"./auth/User\";\r\n \r\n-connectDB\r\n+connectD\r\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { isPass, username } = req.body;\r\n"
                },
                {
                    "date": 1706377137249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+import User from \"./auth/User\";\r\n+import connectDB from \"./auth/mongo\";\r\n+\r\n+connectDB();\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { isPass, username } = req.body;\r\n+        try {\r\n+\r\n+            updatedUser = await User.findOneAndUpdate(\r\n+                { username: username },\r\n+                { $set: { totalQuizTaken: 1 } },\r\n+                { new: true }\r\n+            );\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Update successful\",\r\n+                user: updatedUser,\r\n+            });\r\n+        } catch (error) {\r\n+            console.log(err)\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Updating\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                }
            ],
            "date": 1706371097540,
            "name": "Commit-0",
            "content": "import User from \"./User\";\r\nimport connectDB from \"./mongo\";\r\n\r\nconnectDB();\r\n\r\nexport default async function handler(req, res) {\r\n    if (req.method === \"PUT\") {\r\n        const { newName } = req.body;\r\n        const { old } = req.body;\r\n        try {\r\n            const updatedUser = await User.findOneAndUpdate(\r\n                { username: old },\r\n                { $set: { username: newName } },\r\n                { new: true } // to get the updated document\r\n            );\r\n\r\n            res.status(200).json({\r\n                message: \"Update successful\",\r\n            });\r\n        } catch (error) {\r\n            res.status(500).json({\r\n                message: \"Internal Server Error during Updating\",\r\n                error: error.message,\r\n            });\r\n        }\r\n    } else {\r\n        res.status(405).json({ message: \"Method Not Allowed\" });\r\n    }\r\n}\r\n"
        }
    ]
}