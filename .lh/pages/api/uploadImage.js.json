{
    "sourceFile": "pages/api/uploadImage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 55,
            "patches": [
                {
                    "date": 1706201371577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706202134366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { imageUrl } = req.body;\r\n-        const { old } = req.body;\r\n         console.log(\"stored name\", old);\r\n         try {\r\n             const result = await cloudinary.uploader.upload(imageUrl, {\r\n                 folder: \"Driving_Test_data\",\r\n"
                },
                {
                    "date": 1706202178822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,12 @@\n });\r\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const { imageUrl } = req.body;\r\n+        const { file } = req.body;\r\n         console.log(\"stored name\", old);\r\n         try {\r\n-            const result = await cloudinary.uploader.upload(imageUrl, {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n             });\r\n \r\n             console.log(\"Cloudinary Response:\", result);\r\n"
                },
                {
                    "date": 1706202268653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import connectDB from \"./auth/mongo\";\r\n+import bodyParser from 'body-parser'\r\n \r\n const cloudinary = require(\"cloudinary\").v2;\r\n \r\n connectDB();\r\n"
                },
                {
                    "date": 1706202278164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+import connectDB from \"./auth/mongo\";\r\n+import bodyParser from \"body-parser\";\r\n+\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+connectDB();\r\n+cloudinary.config({\r\n+    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n+    api_key: process.env.CLOUDINARY_API_KEY,\r\n+    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\",\r\n+        },\r\n+    },\r\n+};\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { file } = req.body;\r\n+        console.log(\"stored name\", old);\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706202316017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import bodyParser from \"body-parser\";\r\n+\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n+    api_key: process.env.CLOUDINARY_API_KEY,\r\n+    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\",\r\n+        },\r\n+    },\r\n+};\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { file } = req.body;\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706202324642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,88 +40,4 @@\n     } else {\r\n         res.status(405).json({ message: \"Method Not Allowed\" });\r\n     }\r\n }\r\n-import connectDB from \"./auth/mongo\";\r\n-import bodyParser from \"body-parser\";\r\n-\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-connectDB();\r\n-cloudinary.config({\r\n-    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n-    api_key: process.env.CLOUDINARY_API_KEY,\r\n-    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\",\r\n-        },\r\n-    },\r\n-};\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { file } = req.body;\r\n-        console.log(\"stored name\", old);\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import connectDB from \"./auth/mongo\";\r\n-import bodyParser from 'body-parser'\r\n-\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-connectDB();\r\n-cloudinary.config({\r\n-    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n-    api_key: process.env.CLOUDINARY_API_KEY,\r\n-    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n-    secure: true,\r\n-});\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { file } = req.body;\r\n-        console.log(\"stored name\", old);\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1706202331713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import bodyParser from \"body-parser\";\r\n+\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n+    api_key: process.env.CLOUDINARY_API_KEY,\r\n+    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\",\r\n+        },\r\n+    },\r\n+};\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { file } = req.body;\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706202344756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n+    api_key: process.env.CLOUDINARY_API_KEY,\r\n+    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyper: {\r\n+            sizeLimit: \"10mb\",\r\n+        },\r\n+    },\r\n+};\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { file } = req.body;\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706202354054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import bodyParser from \"body-parser\";\r\n+\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n+    api_key: process.env.CLOUDINARY_API_KEY,\r\n+    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\",\r\n+        },\r\n+    },\r\n+};\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { file } = req.body;\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706202476847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,149 +23,23 @@\n         try {\r\n             const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n             });\r\n-\r\n+        \r\n             console.log(\"Cloudinary Response:\", result);\r\n-\r\n+        \r\n             res.status(200).json({\r\n                 message: \"Image Added in cloud\",\r\n                 cloudinaryResponse: result,\r\n             });\r\n         } catch (error) {\r\n+            console.error(\"Error during Cloudinary upload:\", error);\r\n             res.status(500).json({\r\n                 message: \"Internal Server Error during Uploading Image\",\r\n                 error: error.message,\r\n             });\r\n         }\r\n+        \r\n     } else {\r\n         res.status(405).json({ message: \"Method Not Allowed\" });\r\n     }\r\n }\r\n-\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n-    api_key: process.env.CLOUDINARY_API_KEY,\r\n-    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyper: {\r\n-            sizeLimit: \"10mb\",\r\n-        },\r\n-    },\r\n-};\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { file } = req.body;\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import bodyParser from \"body-parser\";\r\n-\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n-    api_key: process.env.CLOUDINARY_API_KEY,\r\n-    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\",\r\n-        },\r\n-    },\r\n-};\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { file } = req.body;\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import bodyParser from \"body-parser\";\r\n-\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n-    api_key: process.env.CLOUDINARY_API_KEY,\r\n-    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\",\r\n-        },\r\n-    },\r\n-};\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { file } = req.body;\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1706202555090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,11 @@\n         try {\r\n             const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n             });\r\n-        \r\n+\r\n             console.log(\"Cloudinary Response:\", result);\r\n-        \r\n+\r\n             res.status(200).json({\r\n                 message: \"Image Added in cloud\",\r\n                 cloudinaryResponse: result,\r\n             });\r\n@@ -37,9 +37,8 @@\n                 message: \"Internal Server Error during Uploading Image\",\r\n                 error: error.message,\r\n             });\r\n         }\r\n-        \r\n     } else {\r\n         res.status(405).json({ message: \"Method Not Allowed\" });\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1706202626942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,11 +20,9 @@\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { file } = req.body;\r\n         try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n+           \r\n \r\n             console.log(\"Cloudinary Response:\", result);\r\n \r\n             res.status(200).json({\r\n"
                },
                {
                    "date": 1706210590078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,11 @@\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n         const { file } = req.body;\r\n         try {\r\n-           \r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n \r\n             console.log(\"Cloudinary Response:\", result);\r\n \r\n             res.status(200).json({\r\n"
                },
                {
                    "date": 1706279948242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n const cloudinary = require(\"cloudinary\").v2;\r\n \r\n cloudinary.config({\r\n-    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n+    cloud_name: dtqogy1xa,\r\n     api_key: process.env.CLOUDINARY_API_KEY,\r\n     api_secret: process.env.CLOUDINARY_API_SECRET,\r\n     secure: true,\r\n });\r\n"
                },
                {
                    "date": 1706279962240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+import bodyParser from \"body-parser\";\r\n+\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: \"dtqogy1xa\",\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\",\r\n+        },\r\n+    },\r\n+};\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { file } = req.body;\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            console.error(\"Error during Cloudinary upload:\", error);\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706279970656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+import bodyParser from \"body-parser\";\r\n+\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: \"dtqogy1xa\",\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\",\r\n+        },\r\n+    },\r\n+};\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const { file } = req.body;\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            console.error(\"Error during Cloudinary upload:\", error);\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706280113966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n };\r\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const { file } = req.body;\r\n+        const file = req.body.get('file');\r\n         try {\r\n             const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n             });\r\n@@ -41,92 +41,4 @@\n     } else {\r\n         res.status(405).json({ message: \"Method Not Allowed\" });\r\n     }\r\n }\r\n-import bodyParser from \"body-parser\";\r\n-\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: \"dtqogy1xa\",\r\n-    api_key: \"994627251363879\",\r\n-    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\",\r\n-        },\r\n-    },\r\n-};\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { file } = req.body;\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            console.error(\"Error during Cloudinary upload:\", error);\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import bodyParser from \"body-parser\";\r\n-\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: dtqogy1xa,\r\n-    api_key: process.env.CLOUDINARY_API_KEY,\r\n-    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\",\r\n-        },\r\n-    },\r\n-};\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const { file } = req.body;\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            console.error(\"Error during Cloudinary upload:\", error);\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1706280165582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n };\r\n \r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const file = req.body.get('file');\r\n+        const file = req.body;\r\n         try {\r\n             const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n             });\r\n"
                },
                {
                    "date": 1706280355756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,20 @@\n-import bodyParser from \"body-parser\";\r\n-\r\n+import { Readable } from 'stream';\r\n const cloudinary = require(\"cloudinary\").v2;\r\n \r\n cloudinary.config({\r\n-    cloud_name: \"dtqogy1xa\",\r\n-    api_key: \"994627251363879\",\r\n-    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n+    api_key: process.env.CLOUDINARY_API_KEY,\r\n+    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n     secure: true,\r\n });\r\n \r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\",\r\n-        },\r\n-    },\r\n-};\r\n-\r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const file = req.body;\r\n+        const fileBuffer = Buffer.from(await req.body.arrayBuffer());\r\n+\r\n         try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n+            const result = await cloudinary.uploader.upload(fileBuffer, {\r\n                 folder: \"Driving_Test_data\",\r\n             });\r\n \r\n             console.log(\"Cloudinary Response:\", result);\r\n"
                },
                {
                    "date": 1706280366017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+import bodyParser from \"body-parser\";\r\n+\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: \"dtqogy1xa\",\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\",\r\n+        },\r\n+    },\r\n+};\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const file = req.body.get(\";\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            console.error(\"Error during Cloudinary upload:\", error);\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706280375360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import { Readable } from 'stream';\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: \"dtqogy1xa\",\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    secure: true,\r\n+});\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const fileBuffer = Buffer.from(await req.body.arrayBuffer());\r\n+\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(fileBuffer, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            console.error(\"Error during Cloudinary upload:\", error);\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706280444994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,90 +6,18 @@\n     api_key: \"994627251363879\",\r\n     api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n     secure: true,\r\n });\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const fileBuffer = Buffer.from(await req.body.arrayBuffer());\r\n \r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(fileBuffer, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            console.error(\"Error during Cloudinary upload:\", error);\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import bodyParser from \"body-parser\";\r\n-\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: \"dtqogy1xa\",\r\n-    api_key: \"994627251363879\",\r\n-    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n-    secure: true,\r\n-});\r\n-\r\n export const config = {\r\n     api: {\r\n         bodyParser: {\r\n-            sizeLimit: \"10mb\",\r\n+            sizeLimit: '10mb', // Set a higher limit (e.g., 10mb) as needed\r\n         },\r\n     },\r\n };\r\n-\r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const file = req.body.get(\";\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            console.error(\"Error during Cloudinary upload:\", error);\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import { Readable } from 'stream';\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n-    api_key: process.env.CLOUDINARY_API_KEY,\r\n-    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n-    secure: true,\r\n-});\r\n-\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n         const fileBuffer = Buffer.from(await req.body.arrayBuffer());\r\n \r\n         try {\r\n             const result = await cloudinary.uploader.upload(fileBuffer, {\r\n"
                },
                {
                    "date": 1706280451370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { Readable } from 'stream';\r\n+import bodyParser from 'body-parser';\r\n const cloudinary = require(\"cloudinary\").v2;\r\n \r\n cloudinary.config({\r\n     cloud_name: \"dtqogy1xa\",\r\n"
                },
                {
                    "date": 1706280534871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     },\r\n };\r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const fileBuffer = Buffer.from(await req.body.arrayBuffer());\r\n+        const fileBuffer = Buffer.from( req.body.arrayBuffer());\r\n \r\n         try {\r\n             const result = await cloudinary.uploader.upload(fileBuffer, {\r\n                 folder: \"Driving_Test_data\",\r\n"
                },
                {
                    "date": 1706280620368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n-import { Readable } from 'stream';\r\n-import bodyParser from 'body-parser';\r\n+import { Readable } from \"stream\";\r\n+import bodyParser from \"body-parser\";\r\n const cloudinary = require(\"cloudinary\").v2;\r\n \r\n cloudinary.config({\r\n     cloud_name: \"dtqogy1xa\",\r\n@@ -11,19 +11,33 @@\n \r\n export const config = {\r\n     api: {\r\n         bodyParser: {\r\n-            sizeLimit: '10mb', // Set a higher limit (e.g., 10mb) as needed\r\n+            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n         },\r\n     },\r\n };\r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const fileBuffer = Buffer.from( req.body.arrayBuffer());\r\n+        const fileBuffer = Buffer.from(req.body);\r\n \r\n         try {\r\n-            const result = await cloudinary.uploader.upload(fileBuffer, {\r\n-                folder: \"Driving_Test_data\",\r\n+            const result = await new Promise((resolve, reject) => {\r\n+                const uploadStream = cloudinary.uploader.upload_stream(\r\n+                    {\r\n+                        folder: \"Driving_Test_data\",\r\n+                    },\r\n+                    (error, result) => {\r\n+                        if (error) reject(error);\r\n+                        else resolve(result);\r\n+                    }\r\n+                );\r\n+\r\n+                const readableStream = new Readable();\r\n+                readableStream.push(fileBuffer);\r\n+                readableStream.push(null);\r\n+\r\n+                readableStream.pipe(uploadStream);\r\n             });\r\n \r\n             console.log(\"Cloudinary Response:\", result);\r\n \r\n"
                },
                {
                    "date": 1706280703329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,17 +30,18 @@\n                         if (error) reject(error);\r\n                         else resolve(result);\r\n                     }\r\n                 );\r\n-\r\n+            \r\n                 const readableStream = new Readable();\r\n                 readableStream.push(fileBuffer);\r\n                 readableStream.push(null);\r\n-\r\n+            \r\n                 readableStream.pipe(uploadStream);\r\n             });\r\n-\r\n+            \r\n             console.log(\"Cloudinary Response:\", result);\r\n+            \r\n \r\n             res.status(200).json({\r\n                 message: \"Image Added in cloud\",\r\n                 cloudinaryResponse: result,\r\n"
                },
                {
                    "date": 1706291502207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,44 +16,6 @@\n         },\r\n     },\r\n };\r\n export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const fileBuffer = Buffer.from(req.body);\r\n-\r\n-        try {\r\n-            const result = await new Promise((resolve, reject) => {\r\n-                const uploadStream = cloudinary.uploader.upload_stream(\r\n-                    {\r\n-                        folder: \"Driving_Test_data\",\r\n-                    },\r\n-                    (error, result) => {\r\n-                        if (error) reject(error);\r\n-                        else resolve(result);\r\n-                    }\r\n-                );\r\n-            \r\n-                const readableStream = new Readable();\r\n-                readableStream.push(fileBuffer);\r\n-                readableStream.push(null);\r\n-            \r\n-                readableStream.pipe(uploadStream);\r\n-            });\r\n-            \r\n-            console.log(\"Cloudinary Response:\", result);\r\n-            \r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            console.error(\"Error during Cloudinary upload:\", error);\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n+    \r\n }\r\n"
                },
                {
                    "date": 1706291523316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+import { Readable } from \"stream\";\r\n+import bodyParser from \"body-parser\";\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: \"dtqogy1xa\",\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n+        },\r\n+    },\r\n+};\r\n+export default async function handler(req, res) {\r\n+    if (req.method === 'PUT') {\r\n+        try {\r\n+            const { buffer } = req.body;\r\n+            const readableStream = new Readable();\r\n+            readableStream._read = () => {};\r\n+            readableStream.push(buffer);\r\n+            readableStream.push(null);\r\n+\r\n+            const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n+                { resource_type: \"auto\" },\r\n+                (error, result) => {\r\n+                    if (error) {\r\n+                        console.error(\"Error during Cloudinary upload:\", error);\r\n+                        res.status(500).json({ error: \"Internal Server Error\" });\r\n+                    } else {\r\n+                        console.log(\"Image uploaded to Cloudinary:\", result);\r\n+                        res.status(200).json(result);\r\n+                    }\r\n+                }\r\n+            ).end(readableStream);\r\n+        } catch (error) {\r\n+            console.error(\"Error during image upload:\", error);\r\n+            res.status(500).json({ error: \"Internal Server Error\" });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ error: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706291655820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,12 +19,8 @@\n export default async function handler(req, res) {\r\n     if (req.method === 'PUT') {\r\n         try {\r\n             const { buffer } = req.body;\r\n-            const readableStream = new Readable();\r\n-            readableStream._read = () => {};\r\n-            readableStream.push(buffer);\r\n-            readableStream.push(null);\r\n \r\n             const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n                 { resource_type: \"auto\" },\r\n                 (error, result) => {\r\n@@ -35,34 +31,13 @@\n                         console.log(\"Image uploaded to Cloudinary:\", result);\r\n                         res.status(200).json(result);\r\n                     }\r\n                 }\r\n-            ).end(readableStream);\r\n+            ).end(buffer);\r\n         } catch (error) {\r\n             console.error(\"Error during image upload:\", error);\r\n             res.status(500).json({ error: \"Internal Server Error\" });\r\n         }\r\n     } else {\r\n         res.status(405).json({ error: \"Method Not Allowed\" });\r\n     }\r\n }\r\n-import { Readable } from \"stream\";\r\n-import bodyParser from \"body-parser\";\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: \"dtqogy1xa\",\r\n-    api_key: \"994627251363879\",\r\n-    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n-        },\r\n-    },\r\n-};\r\n-export default async function handler(req, res) {\r\n-    \r\n-}\r\n"
                },
                {
                    "date": 1706291802414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,10 @@\n     if (req.method === 'PUT') {\r\n         try {\r\n             const { buffer } = req.body;\r\n \r\n+            \r\n+\r\n             const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n                 { resource_type: \"auto\" },\r\n                 (error, result) => {\r\n                     if (error) {\r\n"
                },
                {
                    "date": 1706291809899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     if (req.method === 'PUT') {\r\n         try {\r\n             const { buffer } = req.body;\r\n \r\n-            \r\n+            console.log(\"buffer \")\r\n \r\n             const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n                 { resource_type: \"auto\" },\r\n                 (error, result) => {\r\n"
                },
                {
                    "date": 1706291815016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+import { Readable } from \"stream\";\r\n+import bodyParser from \"body-parser\";\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: \"dtqogy1xa\",\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n+        },\r\n+    },\r\n+};\r\n+export default async function handler(req, res) {\r\n+    if (req.method === 'PUT') {\r\n+        try {\r\n+            const { buffer } = req.body;\r\n+\r\n+            console.log(\"buffer = \", buffer)\r\n+\r\n+            const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n+                { resource_type: \"auto\" },\r\n+                (error, result) => {\r\n+                    if (error) {\r\n+                        console.error(\"Error during Cloudinary upload:\", error);\r\n+                        res.status(500).json({ error: \"Internal Server Error\" });\r\n+                    } else {\r\n+                        console.log(\"Image uploaded to Cloudinary:\", result);\r\n+                        res.status(200).json(result);\r\n+                    }\r\n+                }\r\n+            ).end(buffer);\r\n+        } catch (error) {\r\n+            console.error(\"Error during image upload:\", error);\r\n+            res.status(500).json({ error: \"Internal Server Error\" });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ error: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706291831266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n };\r\n export default async function handler(req, res) {\r\n     if (req.method === 'PUT') {\r\n         try {\r\n-            const { buffer } = req.body;\r\n+            const { file } = req.body;\r\n \r\n             console.log(\"buffer = \", buffer)\r\n \r\n             const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n@@ -42,49 +42,4 @@\n     } else {\r\n         res.status(405).json({ error: \"Method Not Allowed\" });\r\n     }\r\n }\r\n-import { Readable } from \"stream\";\r\n-import bodyParser from \"body-parser\";\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: \"dtqogy1xa\",\r\n-    api_key: \"994627251363879\",\r\n-    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n-        },\r\n-    },\r\n-};\r\n-export default async function handler(req, res) {\r\n-    if (req.method === 'PUT') {\r\n-        try {\r\n-            const { buffer } = req.body;\r\n-\r\n-            console.log(\"buffer \")\r\n-\r\n-            const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n-                { resource_type: \"auto\" },\r\n-                (error, result) => {\r\n-                    if (error) {\r\n-                        console.error(\"Error during Cloudinary upload:\", error);\r\n-                        res.status(500).json({ error: \"Internal Server Error\" });\r\n-                    } else {\r\n-                        console.log(\"Image uploaded to Cloudinary:\", result);\r\n-                        res.status(200).json(result);\r\n-                    }\r\n-                }\r\n-            ).end(buffer);\r\n-        } catch (error) {\r\n-            console.error(\"Error during image upload:\", error);\r\n-            res.status(500).json({ error: \"Internal Server Error\" });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ error: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1706291873551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n-import { Readable } from \"stream\";\r\n-import bodyParser from \"body-parser\";\r\n+import { Readable } from 'stream';\r\n+\r\n const cloudinary = require(\"cloudinary\").v2;\r\n \r\n cloudinary.config({\r\n     cloud_name: \"dtqogy1xa\",\r\n@@ -11,35 +11,34 @@\n \r\n export const config = {\r\n     api: {\r\n         bodyParser: {\r\n-            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n+            sizeLimit: '10mb', // Set a higher limit (e.g., 10mb) as needed\r\n         },\r\n     },\r\n };\r\n export default async function handler(req, res) {\r\n-    if (req.method === 'PUT') {\r\n+    if (req.method === \"PUT\") {\r\n+        const fileBuffer = Buffer.from(await req.body.arrayBuffer());\r\n+\r\n         try {\r\n-            const { file } = req.body;\r\n+            const result = await cloudinary.uploader.upload(fileBuffer, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n \r\n-            console.log(\"buffer = \", buffer)\r\n+            console.log(\"Cloudinary Response:\", result);\r\n \r\n-            const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n-                { resource_type: \"auto\" },\r\n-                (error, result) => {\r\n-                    if (error) {\r\n-                        console.error(\"Error during Cloudinary upload:\", error);\r\n-                        res.status(500).json({ error: \"Internal Server Error\" });\r\n-                    } else {\r\n-                        console.log(\"Image uploaded to Cloudinary:\", result);\r\n-                        res.status(200).json(result);\r\n-                    }\r\n-                }\r\n-            ).end(buffer);\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n         } catch (error) {\r\n-            console.error(\"Error during image upload:\", error);\r\n-            res.status(500).json({ error: \"Internal Server Error\" });\r\n+            console.error(\"Error during Cloudinary upload:\", error);\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n         }\r\n     } else {\r\n-        res.status(405).json({ error: \"Method Not Allowed\" });\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1706291881149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+import bodyParser from \"body-parser\";\r\n+\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: \"dtqogy1xa\",\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\",\r\n+        },\r\n+    },\r\n+};\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const file = req.body.get(\"file\");\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            console.error(\"Error during Cloudinary upload:\", error);\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706291894351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n+import { Readable } from \"stream\";\r\n import bodyParser from \"body-parser\";\r\n-\r\n const cloudinary = require(\"cloudinary\").v2;\r\n \r\n cloudinary.config({\r\n     cloud_name: \"dtqogy1xa\",\r\n@@ -11,78 +11,35 @@\n \r\n export const config = {\r\n     api: {\r\n         bodyParser: {\r\n-            sizeLimit: \"10mb\",\r\n+            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n         },\r\n     },\r\n };\r\n-\r\n export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const file = req.body.get(\"file\");\r\n+    if (req.method === 'PUT') {\r\n         try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n+            const { file } = req.body;\r\n \r\n-            console.log(\"Cloudinary Response:\", result);\r\n+            console.log(\"buffer = \", file)\r\n \r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n+            const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n+                { resource_type: \"auto\" },\r\n+                (error, result) => {\r\n+                    if (error) {\r\n+                        console.error(\"Error during Cloudinary upload:\", error);\r\n+                        res.status(500).json({ error: \"Internal Server Error\" });\r\n+                    } else {\r\n+                        console.log(\"Image uploaded to Cloudinary:\", result);\r\n+                        res.status(200).json(result);\r\n+                    }\r\n+                }\r\n+            ).end(buffer);\r\n         } catch (error) {\r\n-            console.error(\"Error during Cloudinary upload:\", error);\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n+            console.error(\"Error during image upload:\", error);\r\n+            res.status(500).json({ error: \"Internal Server Error\" });\r\n         }\r\n     } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+        res.status(405).json({ error: \"Method Not Allowed\" });\r\n     }\r\n }\r\n-import { Readable } from 'stream';\r\n-\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: \"dtqogy1xa\",\r\n-    api_key: \"994627251363879\",\r\n-    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: '10mb', // Set a higher limit (e.g., 10mb) as needed\r\n-        },\r\n-    },\r\n-};\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const fileBuffer = Buffer.from(await req.body.arrayBuffer());\r\n-\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(fileBuffer, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            console.error(\"Error during Cloudinary upload:\", error);\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1706291900206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,30 +16,28 @@\n         },\r\n     },\r\n };\r\n export default async function handler(req, res) {\r\n-    if (req.method === 'PUT') {\r\n+    if (req.method === \"PUT\") {\r\n+        const file = req.body.get(\"file\");\r\n         try {\r\n-            const { file } = req.body;\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n \r\n-            console.log(\"buffer = \", file)\r\n+            console.log(\"Cloudinary Response:\", result);\r\n \r\n-            const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n-                { resource_type: \"auto\" },\r\n-                (error, result) => {\r\n-                    if (error) {\r\n-                        console.error(\"Error during Cloudinary upload:\", error);\r\n-                        res.status(500).json({ error: \"Internal Server Error\" });\r\n-                    } else {\r\n-                        console.log(\"Image uploaded to Cloudinary:\", result);\r\n-                        res.status(200).json(result);\r\n-                    }\r\n-                }\r\n-            ).end(buffer);\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n         } catch (error) {\r\n-            console.error(\"Error during image upload:\", error);\r\n-            res.status(500).json({ error: \"Internal Server Error\" });\r\n+            console.error(\"Error during Cloudinary upload:\", error);\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n         }\r\n     } else {\r\n-        res.status(405).json({ error: \"Method Not Allowed\" });\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1706291908457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     },\r\n };\r\n export default async function handler(req, res) {\r\n     if (req.method === \"PUT\") {\r\n-        const file = req.body.get(\"file\");\r\n+        const file = req.body;\r\n         try {\r\n             const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n             });\r\n"
                },
                {
                    "date": 1706291918709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+import { Readable } from \"stream\";\r\n+import bodyParser from \"body-parser\";\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: \"dtqogy1xa\",\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n+        },\r\n+    },\r\n+};\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const file = req.body;\r\n+        console.log(\"Cloudinary Response:\", result);\r\n+\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            console.error(\"Error during Cloudinary upload:\", error);\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706291924593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+import { Readable } from \"stream\";\r\n+import bodyParser from \"body-parser\";\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: \"dtqogy1xa\",\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n+        },\r\n+    },\r\n+};\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const file = req.body;\r\n+        console.log(\"file:\", file);\r\n+\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+            console.log(\"Cloudinary Response:\", result);\r\n+\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            console.error(\"Error during Cloudinary upload:\", error);\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706291933752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+import { Readable } from \"stream\";\r\n+import bodyParser from \"body-parser\";\r\n+const cloudinary = require(\"cloudinary\").v2;\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: \"dtqogy1xa\",\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    secure: true,\r\n+});\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: {\r\n+            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n+        },\r\n+    },\r\n+};\r\n+export default async function handler(req, res) {\r\n+    if (req.method === \"PUT\") {\r\n+        const file = req.body;\r\n+        console.log(\"file:\", file);\r\n+\r\n+        try {\r\n+            const result = await cloudinary.uploader.upload(file, {\r\n+                folder: \"Driving_Test_data\",\r\n+            });\r\n+\r\n+\r\n+\r\n+            res.status(200).json({\r\n+                message: \"Image Added in cloud\",\r\n+                cloudinaryResponse: result,\r\n+            });\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                message: \"Internal Server Error during Uploading Image\",\r\n+                error: error.message,\r\n+            });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1706292109446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         },\r\n     },\r\n };\r\n export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n+    if (req.method === \"POST\") {\r\n         const file = req.body;\r\n         console.log(\"file:\", file);\r\n \r\n         try {\r\n@@ -41,139 +41,4 @@\n     } else {\r\n         res.status(405).json({ message: \"Method Not Allowed\" });\r\n     }\r\n }\r\n-import { Readable } from \"stream\";\r\n-import bodyParser from \"body-parser\";\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: \"dtqogy1xa\",\r\n-    api_key: \"994627251363879\",\r\n-    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n-        },\r\n-    },\r\n-};\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const file = req.body;\r\n-        console.log(\"file:\", file);\r\n-\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            console.error(\"Error during Cloudinary upload:\", error);\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import { Readable } from \"stream\";\r\n-import bodyParser from \"body-parser\";\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: \"dtqogy1xa\",\r\n-    api_key: \"994627251363879\",\r\n-    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n-        },\r\n-    },\r\n-};\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const file = req.body;\r\n-        console.log(\"Cloudinary Response:\", result);\r\n-\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            console.error(\"Error during Cloudinary upload:\", error);\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n-import { Readable } from \"stream\";\r\n-import bodyParser from \"body-parser\";\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n-\r\n-cloudinary.config({\r\n-    cloud_name: \"dtqogy1xa\",\r\n-    api_key: \"994627251363879\",\r\n-    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n-    secure: true,\r\n-});\r\n-\r\n-export const config = {\r\n-    api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n-        },\r\n-    },\r\n-};\r\n-export default async function handler(req, res) {\r\n-    if (req.method === \"PUT\") {\r\n-        const file = req.body;\r\n-        try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n-\r\n-            console.log(\"Cloudinary Response:\", result);\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n-        } catch (error) {\r\n-            console.error(\"Error during Cloudinary upload:\", error);\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n-        }\r\n-    } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1706292184920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n };\r\n export default async function handler(req, res) {\r\n     if (req.method === \"POST\") {\r\n         const file = req.body;\r\n-        console.log(\"file:\", file);\r\n+        console.log(\"file:\", file.name);\r\n \r\n         try {\r\n             const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n"
                },
                {
                    "date": 1706292213992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n };\r\n export default async function handler(req, res) {\r\n     if (req.method === \"POST\") {\r\n         const file = req.body;\r\n-        console.log(\"file:\", file.name);\r\n+        console.log(\"file:\", file[0].name);\r\n \r\n         try {\r\n             const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n"
                },
                {
                    "date": 1706292230958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n };\r\n export default async function handler(req, res) {\r\n     if (req.method === \"POST\") {\r\n         const file = req.body;\r\n-        console.log(\"file:\", file[0].name);\r\n+        console.log(\"file:\", file.name);\r\n \r\n         try {\r\n             const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n"
                },
                {
                    "date": 1706292241453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n };\r\n export default async function handler(req, res) {\r\n     if (req.method === \"POST\") {\r\n         const file = req.body;\r\n-        console.log(\"file:\", file.name);\r\n+        console.log(\"file:\", type);\r\n \r\n         try {\r\n             const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n"
                },
                {
                    "date": 1706292248722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n };\r\n export default async function handler(req, res) {\r\n     if (req.method === \"POST\") {\r\n         const file = req.body;\r\n-        console.log(\"file:\", type);\r\n+        console.log(\"file:\", typeof(file));\r\n \r\n         try {\r\n             const result = await cloudinary.uploader.upload(file, {\r\n                 folder: \"Driving_Test_data\",\r\n"
                },
                {
                    "date": 1706292602858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,53 @@\n         },\r\n     },\r\n };\r\n export default async function handler(req, res) {\r\n-    if (req.method === \"POST\") {\r\n+    if (req.method === \"POST\") {import { Readable } from \"stream\";\r\n+    import bodyParser from \"body-parser\";\r\n+    import cloudinary from \"cloudinary\";\r\n+    \r\n+    cloudinary.config({\r\n+        cloud_name: \"dtqogy1xa\",\r\n+        api_key: \"994627251363879\",\r\n+        api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+        secure: true,\r\n+    });\r\n+    \r\n+    export const config = {\r\n+        api: {\r\n+            bodyParser: {\r\n+                sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n+            },\r\n+        },\r\n+    };\r\n+    \r\n+    export default async function handler(req, res) {\r\n+        if (req.method === 'PUT') {\r\n+            try {\r\n+                const { buffer } = req.body;\r\n+    \r\n+                const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n+                    { resource_type: \"auto\" },\r\n+                    (error, result) => {\r\n+                        if (error) {\r\n+                            console.error(\"Error during Cloudinary upload:\", error);\r\n+                            res.status(500).json({ error: \"Internal Server Error\" });\r\n+                        } else {\r\n+                            console.log(\"Image uploaded to Cloudinary:\", result);\r\n+                            res.status(200).json(result);\r\n+                        }\r\n+                    }\r\n+                ).end(buffer);\r\n+            } catch (error) {\r\n+                console.error(\"Error during image upload:\", error);\r\n+                res.status(500).json({ error: \"Internal Server Error\" });\r\n+            }\r\n+        } else {\r\n+            res.status(405).json({ error: \"Method Not Allowed\" });\r\n+        }\r\n+    }\r\n+    \r\n         const file = req.body;\r\n         console.log(\"file:\", typeof(file));\r\n \r\n         try {\r\n"
                },
                {
                    "date": 1706292626182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { Readable } from \"stream\";\r\n import bodyParser from \"body-parser\";\r\n-const cloudinary = require(\"cloudinary\").v2;\r\n+import cloudinary from \"cloudinary\";\r\n \r\n cloudinary.config({\r\n     cloud_name: \"dtqogy1xa\",\r\n     api_key: \"994627251363879\",\r\n@@ -15,74 +15,31 @@\n             sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n         },\r\n     },\r\n };\r\n+\r\n export default async function handler(req, res) {\r\n-    if (req.method === \"POST\") {import { Readable } from \"stream\";\r\n-    import bodyParser from \"body-parser\";\r\n-    import cloudinary from \"cloudinary\";\r\n-    \r\n-    cloudinary.config({\r\n-        cloud_name: \"dtqogy1xa\",\r\n-        api_key: \"994627251363879\",\r\n-        api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n-        secure: true,\r\n-    });\r\n-    \r\n-    export const config = {\r\n-        api: {\r\n-            bodyParser: {\r\n-                sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n-            },\r\n-        },\r\n-    };\r\n-    \r\n-    export default async function handler(req, res) {\r\n-        if (req.method === 'PUT') {\r\n-            try {\r\n-                const { buffer } = req.body;\r\n-    \r\n-                const cloudinaryResponse = await cloudinary.uploader.upload_stream(\r\n-                    { resource_type: \"auto\" },\r\n-                    (error, result) => {\r\n-                        if (error) {\r\n-                            console.error(\"Error during Cloudinary upload:\", error);\r\n-                            res.status(500).json({ error: \"Internal Server Error\" });\r\n-                        } else {\r\n-                            console.log(\"Image uploaded to Cloudinary:\", result);\r\n-                            res.status(200).json(result);\r\n-                        }\r\n-                    }\r\n-                ).end(buffer);\r\n-            } catch (error) {\r\n-                console.error(\"Error during image upload:\", error);\r\n-                res.status(500).json({ error: \"Internal Server Error\" });\r\n-            }\r\n-        } else {\r\n-            res.status(405).json({ error: \"Method Not Allowed\" });\r\n-        }\r\n-    }\r\n-    \r\n-        const file = req.body;\r\n-        console.log(\"file:\", typeof(file));\r\n-\r\n+    if (req.method === \"POST\") {\r\n         try {\r\n-            const result = await cloudinary.uploader.upload(file, {\r\n-                folder: \"Driving_Test_data\",\r\n-            });\r\n+            const { buffer } = req.body;\r\n \r\n-\r\n-\r\n-            res.status(200).json({\r\n-                message: \"Image Added in cloud\",\r\n-                cloudinaryResponse: result,\r\n-            });\r\n+            const cloudinaryResponse = await cloudinary.uploader\r\n+                .upload_stream({ resource_type: \"auto\" }, (error, result) => {\r\n+                    if (error) {\r\n+                        console.error(\"Error during Cloudinary upload:\", error);\r\n+                        res.status(500).json({\r\n+                            error: \"Internal Server Error\",\r\n+                        });\r\n+                    } else {\r\n+                        console.log(\"Image uploaded to Cloudinary:\", result);\r\n+                        res.status(200).json(result);\r\n+                    }\r\n+                })\r\n+                .end(buffer);\r\n         } catch (error) {\r\n-            res.status(500).json({\r\n-                message: \"Internal Server Error during Uploading Image\",\r\n-                error: error.message,\r\n-            });\r\n+            console.error(\"Error during image upload:\", error);\r\n+            res.status(500).json({ error: \"Internal Server Error\" });\r\n         }\r\n     } else {\r\n-        res.status(405).json({ message: \"Method Not Allowed\" });\r\n+        res.status(405).json({ error: \"Method Not Allowed\" });\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1706292668751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n export default async function handler(req, res) {\r\n     if (req.method === \"POST\") {\r\n         try {\r\n             const { buffer } = req.body;\r\n+            console.log(buffer)\r\n \r\n             const cloudinaryResponse = await cloudinary.uploader\r\n                 .upload_stream({ resource_type: \"auto\" }, (error, result) => {\r\n                     if (error) {\r\n"
                },
                {
                    "date": 1706292789364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n export default async function handler(req, res) {\r\n     if (req.method === \"POST\") {\r\n         try {\r\n             const { buffer } = req.body;\r\n-            console.log(buffer)\r\n+            console.log(req.bod)\r\n \r\n             const cloudinaryResponse = await cloudinary.uploader\r\n                 .upload_stream({ resource_type: \"auto\" }, (error, result) => {\r\n                     if (error) {\r\n"
                },
                {
                    "date": 1706292844607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n export default async function handler(req, res) {\r\n     if (req.method === \"POST\") {\r\n         try {\r\n             const { buffer } = req.body;\r\n-            console.log(req.bod)\r\n+            console.log(req.headers)\r\n \r\n             const cloudinaryResponse = await cloudinary.uploader\r\n                 .upload_stream({ resource_type: \"auto\" }, (error, result) => {\r\n                     if (error) {\r\n"
                },
                {
                    "date": 1706292972916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n import { Readable } from \"stream\";\r\n import bodyParser from \"body-parser\";\r\n import cloudinary from \"cloudinary\";\r\n+import multer from 'multer';\r\n \r\n+\r\n cloudinary.config({\r\n     cloud_name: \"dtqogy1xa\",\r\n     api_key: \"994627251363879\",\r\n     api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n"
                },
                {
                    "date": 1706293012300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,43 +1,49 @@\n-import { Readable } from \"stream\";\r\n-import bodyParser from \"body-parser\";\r\n-import cloudinary from \"cloudinary\";\r\n import multer from 'multer';\r\n+import cloudinary from 'cloudinary';\r\n \r\n cloudinary.config({\r\n     cloud_name: \"dtqogy1xa\",\r\n     api_key: \"994627251363879\",\r\n     api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n     secure: true,\r\n });\r\n \r\n+const storage = multer.memoryStorage();\r\n+const upload = multer({ storage: storage });\r\n+\r\n export const config = {\r\n     api: {\r\n-        bodyParser: {\r\n-            sizeLimit: \"10mb\", // Set a higher limit (e.g., 10mb) as needed\r\n-        },\r\n+        bodyParser: false, // Disable default bodyParser\r\n     },\r\n };\r\n \r\n export default async function handler(req, res) {\r\n-    if (req.method === \"POST\") {\r\n+    if (req.method === 'POST') {\r\n         try {\r\n-            const { buffer } = req.body;\r\n-            console.log(req.headers)\r\n+            // Apply multer middleware to handle file uploads\r\n+            const multerUpload = upload.single('file');\r\n \r\n-            const cloudinaryResponse = await cloudinary.uploader\r\n-                .upload_stream({ resource_type: \"auto\" }, (error, result) => {\r\n-                    if (error) {\r\n-                        console.error(\"Error during Cloudinary upload:\", error);\r\n-                        res.status(500).json({\r\n-                            error: \"Internal Server Error\",\r\n-                        });\r\n-                    } else {\r\n-                        console.log(\"Image uploaded to Cloudinary:\", result);\r\n-                        res.status(200).json(result);\r\n-                    }\r\n-                })\r\n-                .end(buffer);\r\n+            multerUpload(req, res, async function (err) {\r\n+                if (err) {\r\n+                    console.error(\"Error during file upload:\", err);\r\n+                    return res.status(500).json({ error: \"Internal Server Error\" });\r\n+                }\r\n+\r\n+                const buffer = req.file.buffer;\r\n+\r\n+                const cloudinaryResponse = await cloudinary.uploader\r\n+                    .upload_stream({ resource_type: \"auto\" }, (error, result) => {\r\n+                        if (error) {\r\n+                            console.error(\"Error during Cloudinary upload:\", error);\r\n+                            res.status(500).json({ error: \"Internal Server Error\" });\r\n+                        } else {\r\n+                            console.log(\"Image uploaded to Cloudinary:\", result);\r\n+                            res.status(200).json(result);\r\n+                        }\r\n+                    })\r\n+                    .end(buffer);\r\n+            });\r\n         } catch (error) {\r\n             console.error(\"Error during image upload:\", error);\r\n             res.status(500).json({ error: \"Internal Server Error\" });\r\n         }\r\n"
                },
                {
                    "date": 1706362215817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+import multer from 'multer';\r\n+import cloudinary from 'cloudinary';\r\n+\r\n+cloudinary.config({\r\n+    cloud_name: process.env.,\r\n+    api_key: \"994627251363879\",\r\n+    api_secret: \"LKsGc7bmI68IM82XmWrzJQr0Azo\",\r\n+    secure: true,\r\n+});\r\n+\r\n+const storage = multer.memoryStorage();\r\n+const upload = multer({ storage: storage });\r\n+\r\n+export const config = {\r\n+    api: {\r\n+        bodyParser: false, // Disable default bodyParser\r\n+    },\r\n+};\r\n+\r\n+export default async function handler(req, res) {\r\n+    if (req.method === 'POST') {\r\n+        try {\r\n+            // Apply multer middleware to handle file uploads\r\n+            const multerUpload = upload.single('file');\r\n+\r\n+            multerUpload(req, res, async function (err) {\r\n+                if (err) {\r\n+                    console.error(\"Error during file upload:\", err);\r\n+                    return res.status(500).json({ error: \"Internal Server Error\" });\r\n+                }\r\n+\r\n+                const buffer = req.file.buffer;\r\n+\r\n+                const cloudinaryResponse = await cloudinary.uploader\r\n+                    .upload_stream({ resource_type: \"auto\" }, (error, result) => {\r\n+                        if (error) {\r\n+                            console.error(\"Error during Cloudinary upload:\", error);\r\n+                            res.status(500).json({ error: \"Internal Server Error\" });\r\n+                        } else {\r\n+                            console.log(\"Image uploaded to Cloudinary:\", result);\r\n+                            res.status(200).json(result);\r\n+                        }\r\n+                    })\r\n+                    .end(buffer);\r\n+            });\r\n+        } catch (error) {\r\n+            console.error(\"Error during image upload:\", error);\r\n+            res.status(500).json({ error: \"Internal Server Error\" });\r\n+        }\r\n+    } else {\r\n+        res.status(405).json({ error: \"Method Not Allowed\" });\r\n+    }\r\n+}\r\n"
                }
            ],
            "date": 1706201371577,
            "name": "Commit-0",
            "content": "import connectDB from \"./auth/mongo\";\r\n\r\nconst cloudinary = require(\"cloudinary\").v2;\r\n\r\nconnectDB();\r\ncloudinary.config({\r\n    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\r\n    api_key: process.env.CLOUDINARY_API_KEY,\r\n    api_secret: process.env.CLOUDINARY_API_SECRET,\r\n    secure: true,\r\n});\r\n\r\nexport default async function handler(req, res) {\r\n    if (req.method === \"PUT\") {\r\n        const { imageUrl } = req.body;\r\n        const { old } = req.body;\r\n        console.log(\"stored name\", old);\r\n        try {\r\n            const result = await cloudinary.uploader.upload(imageUrl, {\r\n                folder: \"Driving_Test_data\",\r\n            });\r\n\r\n            console.log(\"Cloudinary Response:\", result);\r\n\r\n            res.status(200).json({\r\n                message: \"Image Added in cloud\",\r\n                cloudinaryResponse: result,\r\n            });\r\n        } catch (error) {\r\n            res.status(500).json({\r\n                message: \"Internal Server Error during Uploading Image\",\r\n                error: error.message,\r\n            });\r\n        }\r\n    } else {\r\n        res.status(405).json({ message: \"Method Not Allowed\" });\r\n    }\r\n}\r\n"
        }
    ]
}